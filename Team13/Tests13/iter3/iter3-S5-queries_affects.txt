1 - modified by both if-else
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select BOOLEAN such that Affects(2, 23)
FALSE
5000
2 - not modified by one if-else
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select BOOLEAN such that Affects(1, 23) and Affects(3, 23) and Affects(4, 23) and Affects(5, 23) and Affects(6, 23)
TRUE
5000
3 - modified by call
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select s1 such that Affects(s1, 25)
none
5000
4 - not modified by call
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select s1 such that Affects(s1, a2) pattern a2(v1, _) with v1.varName = "varFirst"
1, 3, 4, 5, 6, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22
5000
5 - with anything
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select s1 such that Affects(s1, _) and Affects(_, s1) and Affects(_, _)
22, 32, 34, 35, 36, 40, 42, 72, 78, 79, 80, 81
5000
6 - with anything
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select BOOLEAN such that Affects(_, 23) and Affects(1, _)
TRUE
5000
7 - with while loop
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <s1, s2> such that Parent(w1, s1) such that Affects(s1, s2)
42 40,42 42,72 72,78 81,79 78,80 79,81 80
5000
8 - within if and while
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <s1, s2> such that Parent*(ifs1, s1) and Parent*(ifs2, s2) and Affects(s1, s2) and Uses(ifs1, "hasOat")
86 88
5000
9 - circular
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <s1, s2, s3> such that Affects(s1, s2) and Affects(s2, s3) and Affects(s3, s1)
40 42 42,42 40 42,42 42 40,42 42 42,72 72 72
5000
10 - circular with assignments
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <a1, a2, a3> such that Affects(a1, a2) and Affects(a2, a3) and Affects(a3, a1)
40 42 42,42 40 42,42 42 40,42 42 42,72 72 72
5000
11 - circular with prog_line
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <n1, n2, n3> such that Affects(n1, n2) and Affects(n2, n3) and Affects(n3, n1)
40 42 42,42 40 42,42 42 40,42 42 42,72 72 72
5000
12 - self-assign
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <a1, a2> such that Affects(a1, a2) pattern a1("var", "var") and a2("var", "var")
31 34, 34 35, 35 36
5000
13 - affects after self-assigning
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <a1, a2> such that Affects(a1, a2) pattern a2("b", _)
3 22,31 33,32 33
5000
14 - consecutive self-assign
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select s1 such that Affects(s1, s1)
42, 72
5000
15 -  consecutive self-assign
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <s1, s2> such that Affects(s1, s2) with s1.stmt# = s2.stmt#
42 42,72 72
5000
16 - previous statement in while
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <s1, a2> such that Affects(s1, a2) pattern a2("flower", _)
36 40,42 40
5000
17 - achievable if and else
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select <n1, s1> such that Affects(n1, s1) and Parent*(ifs1, n1) and Parent*(ifs1, s1) pattern ifs1("var", _, _)
40 42, 42 40, 42 42
5000
18 - SYNIV: invalid parameter type
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select BOOLEAN such that Affects(_, "affects")
none
5000
19 - SEMIV: invalid de type
procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3;
Select BOOLEAN such that Affects(re1, _)
FALSE
5000
