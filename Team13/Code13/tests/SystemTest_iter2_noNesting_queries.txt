1 - modifies syn ident
while w;
Select w such that Modifies(w, "noLifeNoMoney")
4
5000
2- modifies syn syn
if ifs; stmt s; variable v;
Select ifs such that Modifies(s, v)
8
5000
3 - modifies syn wildcard
read re;
Select re such that Modifies(re, _)
1,15,17,20,5
5000
4 - uses stmtNo ident
print pn;
Select pn such that Uses(7, "b")
3,7,18,21,12,9
5000
5 - uses syn syn
if ifs; variable v;
Select v such that Uses(ifs, v)
a,b,c,d,ILikeCoding007,noLifeNoMoney
5000
6 - uses syn wildcard
print pn;
Select pn such that Uses(pn, _)
3, 7, 9, 12, 18, 21
5000
7 - follows stmtNo syn
stmt s;
Select s such that Follows(8, s)
16
5000
8 - follows syn wildcard
while w; print pn;
Select pn such that Follows(w, _)
3,7,18,21,12,9
5000
9 - follows wildcard stmtNo
assign you;
Select you such that Follows(_, 1)
none
5000
10 - follows* syn syn
while w, w1;
Select w such that Follows*(w, w1)
4
5000
11 - follows* stmtNo syn
assign a;
Select a such that Follows*(3, a)
none
5000
12 - follows* syn syn
print pn; if ifs;
Select ifs such that Follows*(pn, ifs)
8
5000
13 - parent syn stmtNo
stmt s;
Select s such that Parent(s, 3)
none
5000
14 - parent syn syn
assign a; while w;
Select a such that Parent(w, a)
6,19
5000
15 - parent wildcard syn
read re;
Select re such that Parent(_, re)
5,15,17,20
5000
16 - parent* wildcard wildcard
call cl;
Select cl such that Parent*(_, _)
11
5000
17 - parent* stmtNo stmtNo
stmt s;
Select s such that Parent*(8, 17)
none
5000
18 - parent* syn syn
call cl; stmt s;
Select s such that Parent*(s, cl)
8
5000
19 - pattern wildcard, partial
assign a;
Select a pattern a (_, _"a"_)
2,6,19
5000
20 - pattern ident, wildcard
assign what;
Select what pattern what ("a", _)
10,13,14
5000
21 - pattern ident, partial
assign a;
Select a pattern a ("thisIsLife996", _"10"_)
none
5000
22 - pattern + modifies
assign a;
Select a pattern a ("thisIsLife996", _"e"_) such that Modifies(3, _)
none
5000
23 - pattern + modifies
assign a; variable v; if ifs;
Select a such that Modifies(ifs, v) pattern a (_, _"30"_)
6,19
5000
24 - pattern + uses
assign a;
Select a pattern a ("thisIsLife996", _"e"_) such that Uses(3, _)
none
5000
25 - pattern + uses
assign a; if ifs;
Select ifs such that Uses(ifs, "b") pattern a (_, _)
8
5000
26 - pattern + follows
assign a;
Select a pattern a (_, "30") such that Follows(1, a)
none
5000
27 - pattern + follows
assign a; while w; stmt s;
Select s such that Follows(w, s) pattern a ("a", _"c"_)
8
5000
28 - pattern + follows*
assign a; print pn; read re; variable v;
Select v pattern a (v, _"20"_) such that Follows*(pn, re)
noLifeNoMoney, thisIsLife996
5000
29 - pattern + follows*
assign a;
Select a such that Follows*(a, 14) pattern a ("a", _)
13
5000
30 - pattern + parent
assign a; if ifs;
Select a pattern a (_, _"a"_) such that Parent(ifs, 15)
2,6,19
5000
31 - pattern + parent*
assign a; variable v;
Select v such that Parent*(_, 2) pattern a (v, _)
none
5000
32 - Non-matching pattern
assign a;
Select a pattern a (_, "a + b")
none
5000
33 - Non-matching pattern
assign a;
Select a pattern a ("a", "c")
none
5000
34 - invalid pattern assignment //iter 2 extensions
assign a;
Select a pattern a(_, _"a")
none
5000
35 - invalid pattern while
while w; variable v;
Select w pattern w(_, v)
none
5000
36 - invalid pattern if mid param
if ifs; variable v;
Select v pattern ifs(_, v, _)
none
5000
37 - invalid pattern if right param
if ifs; variable v;
Select v pattern ifs(_, _, v)
none
5000
38 - pattern extended partial match
assign a;
Select a pattern a(_, _"b + c"_)
10, 13, 14
5000
39 - pattern extended full match
assign a;
Select a pattern a(_, "b + c + d")
10, 13, 14
5000
40 - pattern while
while w;
Select w pattern w("a", _)
4, 16
5000
41 - pattern if
if ifs;
Select ifs pattern ifs(_, _, _)
8
5000
42 - with
stmt s; constant c;
Select s with s.stmt# = c.value
1, 10, 20
5000
43 - pattern while modifies
while w; variable v;
Select BOOLEAN such that Modifies(w, v) pattern w(v, _)
TRUE
5000
44 - pattern while parent
stmt s; while w;
Select <w, s> such that Parent(w, s) pattern w("c", _)
4 5, 4 6, 4 7
5000
45 - pattern if uses
variable v; if ifs;
Select v such that Uses(ifs, v) pattern ifs(v, _, _)
a, b, c, d
5000
46 - pattern if follow
variable v; stmt s; if ifs;
Select v such that Follows(s, ifs) pattern ifs(v, _, _)
a, b, c, d
5000
47 - 3 clause pattern while uses with
variable v; while w;
Select v such that Uses(w, v) with w.stmt# = 16 pattern w(v, _)
a, b
5000
48 - 3 clause pattern while follows* with
while w; variable v;
Select w such that Follows*(17, 21) pattern w(v, _) with v.varName = "b"
4, 16
5000
49 - pattern if modifies with
variable v; stmt s; if ifs;
Select v such that Modifies(s, v) with s.stmt# = 10 pattern ifs(v, _, _)
a
5000
50 - pattern if parent* with
stmt s; if ifs;
Select BOOLEAN such that Parent*(s, ifs) with ifs.stmt# = 8 pattern ifs(_, _, _)
FALSE
5000
51 - pattern while call* with
procedure p; while w; variable v;
Select <p,w,v> such that Calls*(p, p) pattern w(v, _) with v.varName = "a"
none
5000
52 - pattern while next* with
while w; variable v;
Select v such that Next*(w, w) pattern w(v, _) with w.stmt# = 4
a, b, c
5000
53 - pattern if next* with
variable v; while w; if ifs;
Select v.varName such that Next*(w, ifs) pattern ifs(v, _, _) with v.varName = "d"
d
5000
54 - parent pattern pattern
while w; if ifs; variable x; stmt s; call c;
Select <ifs, x, c> such that Parent(ifs, c) pattern w(x, _) and ifs(x, _, _)
8 a 11, 8 b 11, 8 c 11
5000
55 - modifies pattern pattern
while w; if ifs; variable v; stmt s;
Select v such that Modifies(s, v) pattern w(v, _) and ifs(v, _, _)
a, b
5000
