<?xml-stylesheet type="text/xsl" href="analysis.xsl"?>
<test_results>
<info>
<name>iter3</name><parsing_time_taken>115.000000</parsing_time_taken>
</info>
<queries>
<query>
<id Affects="1" ReturnBoolean="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="modified by both if-else">1</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select BOOLEAN such that Affects(2, 23)]]></querystr>
<stuans>FALSE</stuans>
<correct>FALSE</correct>
<time_taken>36.000000</time_taken>
<passed/>
</query>
<query>
<id Affects="5" ReturnBoolean="1" UnnamedVar="1" SuchThat="1" CondNum="8" RelNum="5" comment="not modified by one if-else">2</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select BOOLEAN such that Affects(1, 23) and Affects(3, 23) and Affects(4, 23) and Affects(5, 23) and Affects(6, 23)]]></querystr>
<stuans>TRUE</stuans>
<correct>TRUE</correct>
<time_taken>46.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="modified by call">3</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select s1 such that Affects(s1, 25)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>49.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" UnnamedVar="2" Pattern="1" SuchThat="1" With="1" CondNum="7" RelNum="1" comment="not modified by call">4</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select s1 such that Affects(s1, a2) pattern a2(v1, _) with v1.varName = "varFirst"]]></querystr>
<stuans>18,21,19,20,5,14,13,12,3,1,17,6,4,16,22</stuans>
<correct>1,3,4,5,6,12,13,14,16,17,18,19,20,21,22</correct>
<time_taken>57.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="3" UnnamedVar="5" SuchThat="1" CondNum="10" RelNum="3" comment="with anything">5</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select s1 such that Affects(s1, _) and Affects(_, s1) and Affects(_, _)]]></querystr>
<stuans></stuans>
<correct>22,32,34,35,36,40,42,72,78,79,80,81</correct>
<time_taken>45.000000</time_taken>
<failed>
<missing>22,32,34,35,36,40,42,72,78,79,80,81</missing>
<additional></additional>
<summary>
<expected>12</expected>
<matched>0</matched>
<missing>12</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id Affects="2" ReturnBoolean="1" UnnamedVar="3" SuchThat="1" CondNum="7" RelNum="2" comment="with anything">6</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select BOOLEAN such that Affects(_, 23) and Affects(1, _)]]></querystr>
<stuans>TRUE</stuans>
<correct>TRUE</correct>
<time_taken>42.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" Parent="1" UnnamedVar="1" SuchThat="2" CondNum="6" RelNum="2" comment="with while loop">7</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <s1, s2> such that Parent(w1, s1) such that Affects(s1, s2)]]></querystr>
<stuans>42 42,42 40,81 80,72 72,78 81,80 79,79 78</stuans>
<correct>42 40,42 42,72 72,78 81,79 78,80 79,81 80</correct>
<time_taken>64.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" Parentstar="2" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="7" RelNum="4" comment="within if and while">8</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <s1, s2> such that Parent*(ifs1, s1) and Parent*(ifs2, s2) and Affects(s1, s2) and Uses(ifs1, "hasOat")]]></querystr>
<stuans>86 88</stuans>
<correct>86 88</correct>
<time_taken>116.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="3" UnnamedVar="1" SuchThat="1" CondNum="6" RelNum="3" comment="circular">9</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <s1, s2, s3> such that Affects(s1, s2) and Affects(s2, s3) and Affects(s3, s1)]]></querystr>
<stuans>72 72 72,42 40 42,40 42 42,42 42 40,42 42 42</stuans>
<correct>40 42 42,42 40 42,42 42 40,42 42 42,72 72 72</correct>
<time_taken>143.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="3" UnnamedVar="1" SuchThat="1" CondNum="6" RelNum="3" comment="circular with assignments">10</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <a1, a2, a3> such that Affects(a1, a2) and Affects(a2, a3) and Affects(a3, a1)]]></querystr>
<stuans>42 42 42,40 42 42,42 40 42,42 42 40,72 72 72</stuans>
<correct>40 42 42,42 40 42,42 42 40,42 42 42,72 72 72</correct>
<time_taken>115.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="3" UnnamedVar="1" SuchThat="1" CondNum="6" RelNum="3" comment="circular with prog_line">11</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <n1, n2, n3> such that Affects(n1, n2) and Affects(n2, n3) and Affects(n3, n1)]]></querystr>
<stuans>72 72 72,42 42 42,42 42 40,40 42 42,42 40 42</stuans>
<correct>40 42 42,42 40 42,42 42 40,42 42 42,72 72 72</correct>
<time_taken>138.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" UnnamedVar="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" comment="self-assign">12</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <a1, a2> such that Affects(a1, a2) pattern a1("var", "var") and a2("var", "var")]]></querystr>
<stuans>35 36,34 35,31 34</stuans>
<correct>31 34,34 35,35 36</correct>
<time_taken>64.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" UnnamedVar="2" Pattern="1" SuchThat="1" CondNum="6" RelNum="1" comment="affects after self-assigning">13</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <a1, a2> such that Affects(a1, a2) pattern a2("b", _)]]></querystr>
<stuans>32 33,3 22,31 33</stuans>
<correct>3 22,31 33,32 33</correct>
<time_taken>62.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="consecutive self-assign">14</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select s1 such that Affects(s1, s1)]]></querystr>
<stuans></stuans>
<correct>42,72</correct>
<time_taken>46.000000</time_taken>
<failed>
<missing>42,72</missing>
<additional></additional>
<summary>
<expected>2</expected>
<matched>0</matched>
<missing>2</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id ReturnTuple="1" Affects="1" UnnamedVar="1" SuchThat="1" With="1" CondNum="5" RelNum="1" comment="consecutive self-assign">15</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <s1, s2> such that Affects(s1, s2) with s1.stmt# = s2.stmt#]]></querystr>
<stuans>42 42,72 72</stuans>
<correct>42 42,72 72</correct>
<time_taken>122.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" UnnamedVar="2" Pattern="1" SuchThat="1" CondNum="6" RelNum="1" comment="previous statement in while">16</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <s1, a2> such that Affects(s1, a2) pattern a2("flower", _)]]></querystr>
<stuans>42 40,36 40</stuans>
<correct>36 40,42 40</correct>
<time_taken>69.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" Parentstar="2" UnnamedVar="3" Pattern="1" SuchThat="1" CondNum="9" RelNum="3" comment="achievable if and else">17</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select <n1, s1> such that Affects(n1, s1) and Parent*(ifs1, n1) and Parent*(ifs1, s1) pattern ifs1("var", _, _)]]></querystr>
<stuans>42 42,40 42,42 40</stuans>
<correct>40 42,42 40,42 42</correct>
<time_taken>104.000000</time_taken>
<passed/>
</query>
<query>
<id Affects="1" ReturnBoolean="1" UnnamedVar="2" SuchThat="1" CondNum="5" RelNum="1" comment="SYNIV: invalid parameter type">18</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select BOOLEAN such that Affects(_, "affects")]]></querystr>
<stuans>FALSE</stuans>
<correct></correct>
<time_taken>52.000000</time_taken>
<failed>
<missing></missing>
<additional>FALSE</additional>
<summary>
<expected>0</expected>
<matched>0</matched>
<missing>0</missing>
<additional>1</additional>
</summary>
</failed>
</query>
<query>
<id Affects="1" ReturnBoolean="1" UnnamedVar="2" SuchThat="1" CondNum="5" RelNum="1" comment="SEMIV: invalid de type">19</id><querystr><![CDATA[procedure proc1, proc2; stmt s1, s2, s3; assign a1, a2, a3; call call1, call2, call3; while w1, w2; if ifs1, ifs2; read re1, re2; print pr1, pr2; variable v1, v2, v3; constant c1, c2, c3; prog_line n1, n2, n3; Select BOOLEAN such that Affects(re1, _)]]></querystr>
<stuans>FALSE</stuans>
<correct>FALSE</correct>
<time_taken>49.000000</time_taken>
<passed/>
</query>
</queries>
</test_results>
